name: Deploy to server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Install SFTP and sshpass
      run: sudo apt-get update && sudo apt-get install -y openssh-client sshpass

    - name: Upload files via SFTP
      env:
        SFTP_SERVER: ${{ secrets.SFTP_SERVER }}
        SFTP_USERNAME: ${{ secrets.SFTP_USERNAME }}
        SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
      run: |
        sshpass -p "${{ secrets.SFTP_PASSWORD }}" sftp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
        ${{ secrets.SFTP_USERNAME }}@${{ secrets.SFTP_SERVER }}:/home/lacorbeille/LaCorbeilleDiscordBOT <<EOF
        put -r ./*
        quit
        EOF

    - name: Stop Docker container
      env:
        SFTP_SERVER: ${{ secrets.SFTP_SERVER }}
        SFTP_USERNAME: ${{ secrets.SFTP_USERNAME }}
        SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
      run: |
        sshpass -p "${{ secrets.SFTP_PASSWORD }}" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
        ${{ secrets.SFTP_USERNAME }}@${{ secrets.SFTP_SERVER }} "docker stop lacorbeille-discordbot"

    - name: Rebuild and run Docker container
      env:
        SFTP_SERVER: ${{ secrets.SFTP_SERVER }}
        SFTP_USERNAME: ${{ secrets.SFTP_USERNAME }}
        SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
      run: |
        sshpass -p "${{ secrets.SFTP_PASSWORD }}" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
        ${{ secrets.SFTP_USERNAME }}@${{ secrets.SFTP_SERVER }} "cd /home/lacorbeille/LaCorbeilleDiscordBOT && docker-compose down && docker-compose build && docker-compose up -d"
